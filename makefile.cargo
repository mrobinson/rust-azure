ifeq (androideabi,$(findstring androideabi,$(TARGET)))
CXX := $(TARGET)-g++
AR := $(TARGET)-ar
else
CXX ?= g++
AR ?= ar
endif

AZURE_CPP_SRC = \
	src/azure-c.cpp \
	libazure/Blur.cpp \
	libazure/convolver.cpp \
	libazure/DataSourceSurface.cpp \
	libazure/DataSurfaceHelpers.cpp \
	libazure/DrawEventRecorder.cpp \
	libazure/DrawTargetCapture.cpp \
	libazure/DrawTarget.cpp \
	libazure/DrawTargetDual.cpp \
	libazure/DrawTargetRecording.cpp \
	libazure/DrawTargetSkia.cpp \
	libazure/DrawTargetTiled.cpp \
	libazure/Factory.cpp \
	libazure/FilterNodeSoftware.cpp \
	libazure/FilterProcessing.cpp \
	libazure/FilterProcessingScalar.cpp \
	libazure/ImageScaling.cpp \
	libazure/Matrix.cpp \
	libazure/Path.cpp \
	libazure/PathHelpers.cpp \
	libazure/PathRecording.cpp \
	libazure/PathSkia.cpp \
	libazure/RecordedEvent.cpp \
	libazure/ScaledFontBase.cpp \
	libazure/ScaledFontSkia.cpp \
	libazure/SourceSurfaceRawData.cpp \
	libazure/SourceSurfaceSkia.cpp

CXXFLAGS += \
	-std=c++11 \
	-fPIC \
	-Ilibazure \
	-DMOZ_GFX \
	-DMOZ_WARN_UNUSED_RESULT="" \
	$(NULL)

ifeq ($(CFG_ENABLE_DEBUG_SKIA),1)
CXXFLAGS += \
	-g \
	-DSK_DEBUG \
	-DGR_DEBUG=1 \
	-DGR_GL_LOG_CALLS=1 \
	-DGR_GL_LOG_CALLS_START=1 \
	$(NULL)
else
CXXFLAGS += \
	-O3 \
	-DSK_RELEASE \
	-DGR_RELEASE=1 \
	$(NULL)
endif

SKIA_OUTDIR = $(shell find $(OUT_DIR)/.. -name 'skia-sys-*' -type d)
FREETYPE_OUTDIR = $(shell find $(OUT_DIR)/.. -name 'freetype-sys-*' -type d)

CXXFLAGS += \
	-I $(FREETYPE_OUTDIR)/include \
	-iquote $(SKIA_OUTDIR)/include \
	-iquote $(SKIA_OUTDIR)/include/core \
	-iquote $(SKIA_OUTDIR)/include/config \
	-iquote $(SKIA_OUTDIR)/include/effects \
	-iquote $(SKIA_OUTDIR)/include/ports \
	-iquote $(SKIA_OUTDIR)/include/utils \
	-iquote $(SKIA_OUTDIR)/include/gpu \
	-iquote $(SKIA_OUTDIR)/include/gpu/gl \
	-DUSE_SKIA \
	-DUSE_SKIA_GPU

USE_CLANG = $(shell $(CXX) --version|grep -c 'clang')

ifneq (arm,$(findstring arm,$(TARGET)))
AZURE_CPP_SRC += \
	libazure/BlurSSE2.cpp \
	libazure/FilterProcessingSSE2.cpp \
	libazure/ImageScalingSSE2.cpp \
	libazure/convolverSSE2.cpp

CXXFLAGS += \
	-msse2 \
	-DUSE_SSE2
endif

ifeq (darwin,$(findstring darwin,$(TARGET)))
CXXFLAGS += \
	-DXP_MACOSX \
	-DXP_UNIX \
	-Dtypeof=__typeof__

AZURE_CPP_SRC += \
	libazure/DrawTargetCG.cpp \
	libazure/MacIOSurface.cpp \
	libazure/PathCG.cpp \
	libazure/ScaledFontMac.cpp \
	libazure/SourceSurfaceCG.cpp
endif

ifeq (linux,$(findstring linux,$(TARGET)))
CXXFLAGS += \
	-DMOZ_ENABLE_FREETYPE \
	-DXP_UNIX \
	-DSK_BUILD_FOR_UNIX
endif

ifeq (androideabi,$(findstring androideabi,$(TARGET)))
CXXFLAGS += \
	-DXP_UNIX \
	-DSK_BUILD_FOR_ANDROID

CXXFLAGS += \
	-DMOZ_ENABLE_FREETYPE
endif

ALL_CPP_SRC = $(AZURE_CPP_SRC)
ALL_OBJS = $(ALL_CPP_SRC:%.cpp=$(OUT_DIR)/%.o)

.PHONY: all
all: $(OUT_DIR)/libazure.a

$(OUT_DIR)/%.o: %.cpp
	mkdir -p `dirname $@` && $(CXX) $< -o $@ -c $(CXXFLAGS)

$(OUT_DIR)/libazure.a: $(ALL_OBJS)
	$(AR) rcs $@ $(ALL_OBJS)
